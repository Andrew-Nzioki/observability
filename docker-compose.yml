services:
  # Consul for Service Discovery
  consul:
    image: hashicorp/consul:latest
    container_name: consul
    ports:
      - "8500:8500"   # UI/API
      - "8600:8600/udp"   # DNS
    command: "agent -server -ui -node=server-1 -bootstrap-expect=1 -client=0.0.0.0"
    volumes:
      - consul_data:/consul/data
    networks:
      - observability

  # Prometheus with Consul discovery
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/rules:/etc/prometheus/rules
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=15d'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - observability
    restart: unless-stopped
    depends_on:
      - consul

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
    ports:
      - "3000:3000"
    networks:
      - observability
    depends_on:
      - prometheus
      - loki
      - tempo
    restart: unless-stopped

  # Loki for logs
  loki:
    image: grafana/loki:latest
    container_name: loki
    user: "0"
    volumes:
      - ./loki/local-config.yml:/etc/loki/local-config.yml
      - loki_data:/loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yml
    networks:
      - observability
    restart: unless-stopped

  # Promtail for log collection
  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./promtail/config.yml:/etc/promtail/config.yml
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - observability
    depends_on:
      - loki
    restart: unless-stopped

  # Tempo for tracing
  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    command: ["-config.file=/etc/tempo/tempo-local.yml"]
    volumes:
      - ./tempo/tempo-local.yml:/etc/tempo/tempo-local.yml
      - tempo_data:/tmp/tempo
    user: "0"
    ports:
      - "3200:3200"   # tempo
      - "14250:14250" # jaeger ingest
      - "6831:6831/udp" # jaeger thrift compact
      - "14268:14268" # jaeger http
      - "9411:9411"   # zipkin
      - "4317:4317"   # otlp grpc
      - "4318:4318"   # otlp http
    networks:
      - observability
    restart: unless-stopped

  # Alertmanager for alerts
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    volumes:
      - ./alertmanager/config.yml:/etc/alertmanager/config.yml
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    ports:
      - "9093:9093"
    networks:
      - observability
    restart: unless-stopped

  # Node Exporter for host metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - observability
    restart: unless-stopped


  backend-api:
    build:
      context: .  
    container_name: backend-api
    ports:
      - "8080:8080"
    environment:
      - SERVICE_NAME=my-service
      - SERVICE_VERSION=1.0.0
      - ENVIRONMENT=production
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - CONSUL_REGISTER_ON_STARTUP=true
      - CONSUL_DEREGISTER_ON_SHUTDOWN=true
      - SERVICE_PORT=8080
      - SERVICE_TAGS=backend,production
      - SERVICE_HEALTH_CHECK_PATH=/health
      - SERVICE_HEALTH_CHECK_INTERVAL=30s
      - METRICS_ENABLED=true
      - METRICS_PATH=/metrics
      - METRICS_PORT=8080
      - OTEL_ENABLED=true
      - OTEL_SERVICE_NAME=my-service
      - OTEL_RESOURCE_ATTRIBUTES=service.name=my-service,service.version=1.0.0,deployment.environment=production
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317
      - OTEL_TRACES_SAMPLER=parentbased_traceidratio
      - OTEL_TRACES_SAMPLER_ARG=0.5
      - LOG_FORMAT=json
      - LOG_LEVEL=info
      - INCLUDE_REQUEST_ID=true
      - INCLUDE_TRACE_ID=true
    networks:
      - observability
    depends_on:
      - consul
      - prometheus
      - loki
      - tempo

networks:
  observability:
    driver: bridge
    name: observability-network

volumes:
  prometheus_data:
  grafana_data:
  loki_data:
  tempo_data:
  consul_data:
  alertmanager_data: